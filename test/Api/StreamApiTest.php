<?php
/**
 * StreamApiTest
 * PHP version 5
 *
 * @category Class
 * @package  Swagger\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * PI Web API 2017 Swagger Spec
 *
 * Swagger Spec file that describes PI Web API
 *
 * OpenAPI spec version: 1.9.0.235
 * Contact: techsupport@osisoft.com
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 *
 */

/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Please update the test case below to test the endpoint.
 */

namespace Swagger\Client;

use \Swagger\Client\Configuration;
use \Swagger\Client\ApiClient;
use \Swagger\Client\ApiException;
use \Swagger\Client\ObjectSerializer;

/**
 * StreamApiTest Class Doc Comment
 *
 * @category Class
 * @package  Swagger\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class StreamApiTest extends \PHPUnit_Framework_TestCase
{

    /**
     * Setup before running any test cases
     */
    public static function setUpBeforeClass()
    {

    }

    /**
     * Setup before running each test case
     */
    public function setUp()
    {

    }

    /**
     * Clean up after running each test case
     */
    public function tearDown()
    {

    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass()
    {

    }

    /**
     * Test case for streamGetChannel
     *
     * Opens a channel that will send messages about any value changes for the specified stream..
     *
     */
    public function testStreamGetChannel()
    {

    }

    /**
     * Test case for streamGetEnd
     *
     * Returns the end-of-stream value of the stream..
     *
     */
    public function testStreamGetEnd()
    {

    }

    /**
     * Test case for streamGetInterpolated
     *
     * Retrieves interpolated values over the specified time range at the specified sampling interval..
     *
     */
    public function testStreamGetInterpolated()
    {

    }

    /**
     * Test case for streamGetInterpolatedAtTimes
     *
     * Retrieves interpolated values over the specified time range at the specified sampling interval..
     *
     */
    public function testStreamGetInterpolatedAtTimes()
    {

    }

    /**
     * Test case for streamGetPlot
     *
     * Retrieves values over the specified time range suitable for plotting over the number of intervals (typically represents pixels)..
     *
     */
    public function testStreamGetPlot()
    {

    }

    /**
     * Test case for streamGetRecorded
     *
     * Returns a list of compressed values for the requested time range from the source provider..
     *
     */
    public function testStreamGetRecorded()
    {

    }

    /**
     * Test case for streamGetRecordedAtTime
     *
     * Returns a single recorded value based on the passed time and retrieval mode from the stream..
     *
     */
    public function testStreamGetRecordedAtTime()
    {

    }

    /**
     * Test case for streamGetRecordedAtTimes
     *
     * Retrieves recorded values at the specified times..
     *
     */
    public function testStreamGetRecordedAtTimes()
    {

    }

    /**
     * Test case for streamGetSummary
     *
     * Returns a summary over the specified time range for the stream..
     *
     */
    public function testStreamGetSummary()
    {

    }

    /**
     * Test case for streamGetValue
     *
     * Returns the value of the stream at the specified time. By default, this is usually the current value..
     *
     */
    public function testStreamGetValue()
    {

    }

    /**
     * Test case for streamUpdateValue
     *
     * Updates a value for the specified stream..
     *
     */
    public function testStreamUpdateValue()
    {

    }

    /**
     * Test case for streamUpdateValues
     *
     * Updates multiple values for the specified stream..
     *
     */
    public function testStreamUpdateValues()
    {

    }

}
