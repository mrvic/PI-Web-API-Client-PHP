<?php
/**
 * StreamSetApiTest
 * PHP version 5
 *
 * @category Class
 * @package  Swagger\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * PI Web API 2017 Swagger Spec
 *
 * Swagger Spec file that describes PI Web API
 *
 * OpenAPI spec version: 1.9.0.235
 * Contact: techsupport@osisoft.com
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 *
 */

/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Please update the test case below to test the endpoint.
 */

namespace Swagger\Client;

use \Swagger\Client\Configuration;
use \Swagger\Client\ApiClient;
use \Swagger\Client\ApiException;
use \Swagger\Client\ObjectSerializer;

/**
 * StreamSetApiTest Class Doc Comment
 *
 * @category Class
 * @package  Swagger\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class StreamSetApiTest extends \PHPUnit_Framework_TestCase
{

    /**
     * Setup before running any test cases
     */
    public static function setUpBeforeClass()
    {

    }

    /**
     * Setup before running each test case
     */
    public function setUp()
    {

    }

    /**
     * Clean up after running each test case
     */
    public function tearDown()
    {

    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass()
    {

    }

    /**
     * Test case for streamSetGetChannel
     *
     * Opens a channel that will send messages about any value changes for the attributes of an Element, Event Frame, or Attribute..
     *
     */
    public function testStreamSetGetChannel()
    {

    }

    /**
     * Test case for streamSetGetChannelAdHoc
     *
     * Opens a channel that will send messages about any value changes for the specified streams..
     *
     */
    public function testStreamSetGetChannelAdHoc()
    {

    }

    /**
     * Test case for streamSetGetEnd
     *
     * Returns End of stream values of the attributes for an Element, Event Frame or Attribute.
     *
     */
    public function testStreamSetGetEnd()
    {

    }

    /**
     * Test case for streamSetGetEndAdHoc
     *
     * Returns End Of Stream values for attributes of the specified streams.
     *
     */
    public function testStreamSetGetEndAdHoc()
    {

    }

    /**
     * Test case for streamSetGetInterpolated
     *
     * Returns interpolated values of attributes for an element, event frame or attribute over the specified time range at the specified sampling interval..
     *
     */
    public function testStreamSetGetInterpolated()
    {

    }

    /**
     * Test case for streamSetGetInterpolatedAdHoc
     *
     * Returns interpolated values of the specified streams over the specified time range at the specified sampling interval..
     *
     */
    public function testStreamSetGetInterpolatedAdHoc()
    {

    }

    /**
     * Test case for streamSetGetInterpolatedAtTimes
     *
     * Returns interpolated values of attributes for an element, event frame or attribute at the specified times..
     *
     */
    public function testStreamSetGetInterpolatedAtTimes()
    {

    }

    /**
     * Test case for streamSetGetInterpolatedAtTimesAdHoc
     *
     * Returns interpolated values of the specified streams at the specified times..
     *
     */
    public function testStreamSetGetInterpolatedAtTimesAdHoc()
    {

    }

    /**
     * Test case for streamSetGetPlot
     *
     * Returns values of attributes for an element, event frame or attribute over the specified time range suitable for plotting over the number of intervals (typically represents pixels)..
     *
     */
    public function testStreamSetGetPlot()
    {

    }

    /**
     * Test case for streamSetGetPlotAdHoc
     *
     * Returns values of attributes for the specified streams over the specified time range suitable for plotting over the number of intervals (typically represents pixels)..
     *
     */
    public function testStreamSetGetPlotAdHoc()
    {

    }

    /**
     * Test case for streamSetGetRecorded
     *
     * Returns recorded values of the attributes for an element, event frame, or attribute..
     *
     */
    public function testStreamSetGetRecorded()
    {

    }

    /**
     * Test case for streamSetGetRecordedAdHoc
     *
     * Returns recorded values of the specified streams..
     *
     */
    public function testStreamSetGetRecordedAdHoc()
    {

    }

    /**
     * Test case for streamSetGetRecordedAtTime
     *
     * Returns recorded values of the attributes for an element, event frame, or attribute..
     *
     */
    public function testStreamSetGetRecordedAtTime()
    {

    }

    /**
     * Test case for streamSetGetRecordedAtTimeAdHoc
     *
     * Returns recorded values based on the passed time and retrieval mode..
     *
     */
    public function testStreamSetGetRecordedAtTimeAdHoc()
    {

    }

    /**
     * Test case for streamSetGetRecordedAtTimes
     *
     * Returns recorded values of attributes for an element, event frame or attribute at the specified times..
     *
     */
    public function testStreamSetGetRecordedAtTimes()
    {

    }

    /**
     * Test case for streamSetGetRecordedAtTimesAdHoc
     *
     * Returns recorded values of the specified streams at the specified times..
     *
     */
    public function testStreamSetGetRecordedAtTimesAdHoc()
    {

    }

    /**
     * Test case for streamSetGetSummaries
     *
     * Returns summary values of the attributes for an element, event frame or attribute..
     *
     */
    public function testStreamSetGetSummaries()
    {

    }

    /**
     * Test case for streamSetGetSummariesAdHoc
     *
     * Returns summary values of the specified streams..
     *
     */
    public function testStreamSetGetSummariesAdHoc()
    {

    }

    /**
     * Test case for streamSetGetValues
     *
     * Returns values of the attributes for an Element, Event Frame or Attribute at the specified time..
     *
     */
    public function testStreamSetGetValues()
    {

    }

    /**
     * Test case for streamSetGetValuesAdHoc
     *
     * Returns values of the specified streams..
     *
     */
    public function testStreamSetGetValuesAdHoc()
    {

    }

    /**
     * Test case for streamSetUpdateValue
     *
     * Updates a single value for the specified streams..
     *
     */
    public function testStreamSetUpdateValue()
    {

    }

    /**
     * Test case for streamSetUpdateValueAdHoc
     *
     * Updates a single value for the specified streams..
     *
     */
    public function testStreamSetUpdateValueAdHoc()
    {

    }

    /**
     * Test case for streamSetUpdateValues
     *
     * Updates multiple values for the specified streams..
     *
     */
    public function testStreamSetUpdateValues()
    {

    }

    /**
     * Test case for streamSetUpdateValuesAdHoc
     *
     * Updates multiple values for the specified streams..
     *
     */
    public function testStreamSetUpdateValuesAdHoc()
    {

    }

}
