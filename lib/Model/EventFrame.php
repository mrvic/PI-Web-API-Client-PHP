<?php
/**
 * EventFrame
 *
 * PHP version 5
 *
 * @category Class
 * @package  PIWebAPI\Client
 * @author   Swaagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * PI Web API 2017 Swagger Spec
 *
 * Swagger Spec file that describes PI Web API
 *
 * OpenAPI spec version: 1.9.0.235
 * Contact: techsupport@osisoft.com
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 *
 */

/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace PIWebAPI\Client\Model;

use \ArrayAccess;

/**
 * EventFrame Class Doc Comment
 *
 * @category    Class */
/**
 * @package     PIWebAPI\Client
 * @author      Swagger Codegen team
 * @link        https://github.com/swagger-api/swagger-codegen
 */
class EventFrame implements ArrayAccess
{
    /**
      * The original name of the model.
      * @var string
      */
    protected static $swaggerModelName = 'EventFrame';

    /**
      * Array of property to type mappings. Used for (de)serialization
      * @var string[]
      */
    protected static $swaggerTypes = [
        'web_id' => 'string',
        'id' => 'string',
        'name' => 'string',
        'description' => 'string',
        'path' => 'string',
        'template_name' => 'string',
        'has_children' => 'bool',
        'category_names' => 'string[]',
        'extended_properties' => 'map[string,\PIWebAPI\Client\Model\Value]',
        'start_time' => '\DateTime',
        'end_time' => '\DateTime',
        'severity' => 'string',
        'acknowledged_by' => 'string',
        'acknowledged_date' => '\DateTime',
        'can_be_acknowledged' => 'bool',
        'is_acknowledged' => 'bool',
        'is_annotated' => 'bool',
        'is_locked' => 'bool',
        'are_values_captured' => 'bool',
        'ref_element_web_ids' => 'string[]',
        'security' => '\PIWebAPI\Client\Model\Security',
        'links' => '\PIWebAPI\Client\Model\EventFrameLinks'
    ];

    public static function swaggerTypes()
    {
        return self::$swaggerTypes;
    }

    /**
     * Array of attributes where the key is the local name, and the value is the original name
     * @var string[]
     */
    protected static $attributeMap = [
        'web_id' => 'WebId',
        'id' => 'Id',
        'name' => 'Name',
        'description' => 'Description',
        'path' => 'Path',
        'template_name' => 'TemplateName',
        'has_children' => 'HasChildren',
        'category_names' => 'CategoryNames',
        'extended_properties' => 'ExtendedProperties',
        'start_time' => 'StartTime',
        'end_time' => 'EndTime',
        'severity' => 'Severity',
        'acknowledged_by' => 'AcknowledgedBy',
        'acknowledged_date' => 'AcknowledgedDate',
        'can_be_acknowledged' => 'CanBeAcknowledged',
        'is_acknowledged' => 'IsAcknowledged',
        'is_annotated' => 'IsAnnotated',
        'is_locked' => 'IsLocked',
        'are_values_captured' => 'AreValuesCaptured',
        'ref_element_web_ids' => 'RefElementWebIds',
        'security' => 'Security',
        'links' => 'Links'
    ];


    /**
     * Array of attributes to setter functions (for deserialization of responses)
     * @var string[]
     */
    protected static $setters = [
        'web_id' => 'setWebId',
        'id' => 'setId',
        'name' => 'setName',
        'description' => 'setDescription',
        'path' => 'setPath',
        'template_name' => 'setTemplateName',
        'has_children' => 'setHasChildren',
        'category_names' => 'setCategoryNames',
        'extended_properties' => 'setExtendedProperties',
        'start_time' => 'setStartTime',
        'end_time' => 'setEndTime',
        'severity' => 'setSeverity',
        'acknowledged_by' => 'setAcknowledgedBy',
        'acknowledged_date' => 'setAcknowledgedDate',
        'can_be_acknowledged' => 'setCanBeAcknowledged',
        'is_acknowledged' => 'setIsAcknowledged',
        'is_annotated' => 'setIsAnnotated',
        'is_locked' => 'setIsLocked',
        'are_values_captured' => 'setAreValuesCaptured',
        'ref_element_web_ids' => 'setRefElementWebIds',
        'security' => 'setSecurity',
        'links' => 'setLinks'
    ];


    /**
     * Array of attributes to getter functions (for serialization of requests)
     * @var string[]
     */
    protected static $getters = [
        'web_id' => 'getWebId',
        'id' => 'getId',
        'name' => 'getName',
        'description' => 'getDescription',
        'path' => 'getPath',
        'template_name' => 'getTemplateName',
        'has_children' => 'getHasChildren',
        'category_names' => 'getCategoryNames',
        'extended_properties' => 'getExtendedProperties',
        'start_time' => 'getStartTime',
        'end_time' => 'getEndTime',
        'severity' => 'getSeverity',
        'acknowledged_by' => 'getAcknowledgedBy',
        'acknowledged_date' => 'getAcknowledgedDate',
        'can_be_acknowledged' => 'getCanBeAcknowledged',
        'is_acknowledged' => 'getIsAcknowledged',
        'is_annotated' => 'getIsAnnotated',
        'is_locked' => 'getIsLocked',
        'are_values_captured' => 'getAreValuesCaptured',
        'ref_element_web_ids' => 'getRefElementWebIds',
        'security' => 'getSecurity',
        'links' => 'getLinks'
    ];

    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    public static function setters()
    {
        return self::$setters;
    }

    public static function getters()
    {
        return self::$getters;
    }

    

    

    /**
     * Associative array for storing property values
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     * @param mixed[] $data Associated array of property values initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['web_id'] = isset($data['web_id']) ? $data['web_id'] : null;
        $this->container['id'] = isset($data['id']) ? $data['id'] : null;
        $this->container['name'] = isset($data['name']) ? $data['name'] : null;
        $this->container['description'] = isset($data['description']) ? $data['description'] : null;
        $this->container['path'] = isset($data['path']) ? $data['path'] : null;
        $this->container['template_name'] = isset($data['template_name']) ? $data['template_name'] : null;
        $this->container['has_children'] = isset($data['has_children']) ? $data['has_children'] : null;
        $this->container['category_names'] = isset($data['category_names']) ? $data['category_names'] : null;
        $this->container['extended_properties'] = isset($data['extended_properties']) ? $data['extended_properties'] : null;
        $this->container['start_time'] = isset($data['start_time']) ? $data['start_time'] : null;
        $this->container['end_time'] = isset($data['end_time']) ? $data['end_time'] : null;
        $this->container['severity'] = isset($data['severity']) ? $data['severity'] : null;
        $this->container['acknowledged_by'] = isset($data['acknowledged_by']) ? $data['acknowledged_by'] : null;
        $this->container['acknowledged_date'] = isset($data['acknowledged_date']) ? $data['acknowledged_date'] : null;
        $this->container['can_be_acknowledged'] = isset($data['can_be_acknowledged']) ? $data['can_be_acknowledged'] : null;
        $this->container['is_acknowledged'] = isset($data['is_acknowledged']) ? $data['is_acknowledged'] : null;
        $this->container['is_annotated'] = isset($data['is_annotated']) ? $data['is_annotated'] : null;
        $this->container['is_locked'] = isset($data['is_locked']) ? $data['is_locked'] : null;
        $this->container['are_values_captured'] = isset($data['are_values_captured']) ? $data['are_values_captured'] : null;
        $this->container['ref_element_web_ids'] = isset($data['ref_element_web_ids']) ? $data['ref_element_web_ids'] : null;
        $this->container['security'] = isset($data['security']) ? $data['security'] : null;
        $this->container['links'] = isset($data['links']) ? $data['links'] : null;
    }

    /**
     * show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalid_properties = [];
        return $invalid_properties;
    }

    /**
     * validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properteis are valid
     */
    public function valid()
    {
        return true;
    }


    /**
     * Gets web_id
     * @return string
     */
    public function getWebId()
    {
        return $this->container['web_id'];
    }

    /**
     * Sets web_id
     * @param string $web_id
     * @return $this
     */
    public function setWebId($web_id)
    {
        $this->container['web_id'] = $web_id;

        return $this;
    }

    /**
     * Gets id
     * @return string
     */
    public function getId()
    {
        return $this->container['id'];
    }

    /**
     * Sets id
     * @param string $id
     * @return $this
     */
    public function setId($id)
    {
        $this->container['id'] = $id;

        return $this;
    }

    /**
     * Gets name
     * @return string
     */
    public function getName()
    {
        return $this->container['name'];
    }

    /**
     * Sets name
     * @param string $name
     * @return $this
     */
    public function setName($name)
    {
        $this->container['name'] = $name;

        return $this;
    }

    /**
     * Gets description
     * @return string
     */
    public function getDescription()
    {
        return $this->container['description'];
    }

    /**
     * Sets description
     * @param string $description
     * @return $this
     */
    public function setDescription($description)
    {
        $this->container['description'] = $description;

        return $this;
    }

    /**
     * Gets path
     * @return string
     */
    public function getPath()
    {
        return $this->container['path'];
    }

    /**
     * Sets path
     * @param string $path
     * @return $this
     */
    public function setPath($path)
    {
        $this->container['path'] = $path;

        return $this;
    }

    /**
     * Gets template_name
     * @return string
     */
    public function getTemplateName()
    {
        return $this->container['template_name'];
    }

    /**
     * Sets template_name
     * @param string $template_name
     * @return $this
     */
    public function setTemplateName($template_name)
    {
        $this->container['template_name'] = $template_name;

        return $this;
    }

    /**
     * Gets has_children
     * @return bool
     */
    public function getHasChildren()
    {
        return $this->container['has_children'];
    }

    /**
     * Sets has_children
     * @param bool $has_children
     * @return $this
     */
    public function setHasChildren($has_children)
    {
        $this->container['has_children'] = $has_children;

        return $this;
    }

    /**
     * Gets category_names
     * @return string[]
     */
    public function getCategoryNames()
    {
        return $this->container['category_names'];
    }

    /**
     * Sets category_names
     * @param string[] $category_names
     * @return $this
     */
    public function setCategoryNames($category_names)
    {
        $this->container['category_names'] = $category_names;

        return $this;
    }

    /**
     * Gets extended_properties
     * @return map[string,\PIWebAPI\Client\Model\Value]
     */
    public function getExtendedProperties()
    {
        return $this->container['extended_properties'];
    }

    /**
     * Sets extended_properties
     * @param map[string,\PIWebAPI\Client\Model\Value] $extended_properties
     * @return $this
     */
    public function setExtendedProperties($extended_properties)
    {
        $this->container['extended_properties'] = $extended_properties;

        return $this;
    }

    /**
     * Gets start_time
     * @return \DateTime
     */
    public function getStartTime()
    {
        return $this->container['start_time'];
    }

    /**
     * Sets start_time
     * @param \DateTime $start_time
     * @return $this
     */
    public function setStartTime($start_time)
    {
        $this->container['start_time'] = $start_time;

        return $this;
    }

    /**
     * Gets end_time
     * @return \DateTime
     */
    public function getEndTime()
    {
        return $this->container['end_time'];
    }

    /**
     * Sets end_time
     * @param \DateTime $end_time
     * @return $this
     */
    public function setEndTime($end_time)
    {
        $this->container['end_time'] = $end_time;

        return $this;
    }

    /**
     * Gets severity
     * @return string
     */
    public function getSeverity()
    {
        return $this->container['severity'];
    }

    /**
     * Sets severity
     * @param string $severity
     * @return $this
     */
    public function setSeverity($severity)
    {
        $this->container['severity'] = $severity;

        return $this;
    }

    /**
     * Gets acknowledged_by
     * @return string
     */
    public function getAcknowledgedBy()
    {
        return $this->container['acknowledged_by'];
    }

    /**
     * Sets acknowledged_by
     * @param string $acknowledged_by
     * @return $this
     */
    public function setAcknowledgedBy($acknowledged_by)
    {
        $this->container['acknowledged_by'] = $acknowledged_by;

        return $this;
    }

    /**
     * Gets acknowledged_date
     * @return \DateTime
     */
    public function getAcknowledgedDate()
    {
        return $this->container['acknowledged_date'];
    }

    /**
     * Sets acknowledged_date
     * @param \DateTime $acknowledged_date
     * @return $this
     */
    public function setAcknowledgedDate($acknowledged_date)
    {
        $this->container['acknowledged_date'] = $acknowledged_date;

        return $this;
    }

    /**
     * Gets can_be_acknowledged
     * @return bool
     */
    public function getCanBeAcknowledged()
    {
        return $this->container['can_be_acknowledged'];
    }

    /**
     * Sets can_be_acknowledged
     * @param bool $can_be_acknowledged
     * @return $this
     */
    public function setCanBeAcknowledged($can_be_acknowledged)
    {
        $this->container['can_be_acknowledged'] = $can_be_acknowledged;

        return $this;
    }

    /**
     * Gets is_acknowledged
     * @return bool
     */
    public function getIsAcknowledged()
    {
        return $this->container['is_acknowledged'];
    }

    /**
     * Sets is_acknowledged
     * @param bool $is_acknowledged
     * @return $this
     */
    public function setIsAcknowledged($is_acknowledged)
    {
        $this->container['is_acknowledged'] = $is_acknowledged;

        return $this;
    }

    /**
     * Gets is_annotated
     * @return bool
     */
    public function getIsAnnotated()
    {
        return $this->container['is_annotated'];
    }

    /**
     * Sets is_annotated
     * @param bool $is_annotated
     * @return $this
     */
    public function setIsAnnotated($is_annotated)
    {
        $this->container['is_annotated'] = $is_annotated;

        return $this;
    }

    /**
     * Gets is_locked
     * @return bool
     */
    public function getIsLocked()
    {
        return $this->container['is_locked'];
    }

    /**
     * Sets is_locked
     * @param bool $is_locked
     * @return $this
     */
    public function setIsLocked($is_locked)
    {
        $this->container['is_locked'] = $is_locked;

        return $this;
    }

    /**
     * Gets are_values_captured
     * @return bool
     */
    public function getAreValuesCaptured()
    {
        return $this->container['are_values_captured'];
    }

    /**
     * Sets are_values_captured
     * @param bool $are_values_captured
     * @return $this
     */
    public function setAreValuesCaptured($are_values_captured)
    {
        $this->container['are_values_captured'] = $are_values_captured;

        return $this;
    }

    /**
     * Gets ref_element_web_ids
     * @return string[]
     */
    public function getRefElementWebIds()
    {
        return $this->container['ref_element_web_ids'];
    }

    /**
     * Sets ref_element_web_ids
     * @param string[] $ref_element_web_ids
     * @return $this
     */
    public function setRefElementWebIds($ref_element_web_ids)
    {
        $this->container['ref_element_web_ids'] = $ref_element_web_ids;

        return $this;
    }

    /**
     * Gets security
     * @return \PIWebAPI\Client\Model\Security
     */
    public function getSecurity()
    {
        return $this->container['security'];
    }

    /**
     * Sets security
     * @param \PIWebAPI\Client\Model\Security $security
     * @return $this
     */
    public function setSecurity($security)
    {
        $this->container['security'] = $security;

        return $this;
    }

    /**
     * Gets links
     * @return \PIWebAPI\Client\Model\EventFrameLinks
     */
    public function getLinks()
    {
        return $this->container['links'];
    }

    /**
     * Sets links
     * @param \PIWebAPI\Client\Model\EventFrameLinks $links
     * @return $this
     */
    public function setLinks($links)
    {
        $this->container['links'] = $links;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     * @param  integer $offset Offset
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     * @param  integer $offset Offset
     * @return mixed
     */
    public function offsetGet($offset)
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     * @param  integer $offset Offset
     * @param  mixed   $value  Value to be set
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     * @param  integer $offset Offset
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) { // use JSON pretty print
            return json_encode(\PIWebAPI\Client\ObjectSerializer::sanitizeForSerialization($this), JSON_PRETTY_PRINT);
        }

        return json_encode(\PIWebAPI\Client\ObjectSerializer::sanitizeForSerialization($this));
    }
}

